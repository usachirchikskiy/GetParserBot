import json

from telethon import Button
from telethon.tl.types import UpdateBotCallbackQuery, UpdateNewMessage

from src.database.dao.UserDao import UserDao
from src.database.model.User import User
from src.main import client_bot
from src.utils.constants import media, percentage_string


async def handle_referral_system(event):
    id = None

    if isinstance(event.original_update, UpdateBotCallbackQuery):
        id = event.original_update.user_id
    elif isinstance(event.original_update, UpdateNewMessage):
        id = event.original_update.message.peer_id.user_id

    user_entity: User = await UserDao.find_one_or_none_user(id=id)
    earned = user_entity.earned
    referrals = len(user_entity.referrals)

    text = f'''
üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–µ—Ç—å\n
–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\nhttps://t.me/silipublic_bot?start={id}\n
–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è –≤—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ - {earned} RUB
–í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ - {referrals} –ª—é–¥–µ–π\n
–ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π –ø–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –ø–æ–ø–æ–ª–Ω–∏—Ç –±–∞–ª–∞–Ω—Å, —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ {percentage_string} –æ—Ç —Å—É–º–º—ã –µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞
    '''

    buttons = [[
        Button.inline("–ù–∞–∑–∞–¥", data=json.dumps({"action": "back_to_main_menu"})),
    ]]
    await client_bot.send_file(event.chat_id, caption=text, file=media,
                               buttons=buttons)
