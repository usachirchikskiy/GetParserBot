"""commit

Revision ID: fcf292110247
Revises: 
Create Date: 2023-07-05 03:05:27.611419

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fcf292110247'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('filter',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('question_number', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mailing',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('access_hash', sa.BigInteger(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('entities', sa.ARRAY(postgresql.JSONB(astext_type=sa.Text())), nullable=True),
    sa.Column('message', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_system',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promocode',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('sum', sa.Float(), nullable=True),
    sa.Column('activation_quantity', sa.Integer(), nullable=True),
    sa.Column('used_quantity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('price_one_day', sa.Integer(), nullable=True),
    sa.Column('price_three_day', sa.Integer(), nullable=True),
    sa.Column('price_week', sa.Integer(), nullable=True),
    sa.Column('price_month', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('bot_message', sa.String(), nullable=True),
    sa.Column('referrer_id', sa.BigInteger(), nullable=True),
    sa.Column('earned', sa.Float(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('blocked', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['referrer_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_payment_system_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('payment_system_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['payment_system_id'], ['payment_system.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_subscription_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.Column('is_favourite', sa.Boolean(), nullable=True),
    sa.Column('expired_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscription.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_subscription_filter_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.Column('filter_id', sa.BigInteger(), nullable=True),
    sa.Column('is_favourite', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['filter_id'], ['filter.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscription.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'subscription_id', 'filter_id', name='user_subscription_filter_uc')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_subscription_filter_association')
    op.drop_table('user_subscription_association')
    op.drop_table('user_payment_system_association')
    op.drop_table('user')
    op.drop_table('subscription')
    op.drop_table('promocode')
    op.drop_table('payment_system')
    op.drop_table('mailing')
    op.drop_table('filter')
    # ### end Alembic commands ###
